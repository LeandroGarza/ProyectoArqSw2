version: '3'

services:
  users_database:
    build: ./db/users
    environment:
      MYSQL_DATABASE: users
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
      timeout: 20s
      retries: 10
  mongo_db:
      image: mongo
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
        MONGO_DATA_DIR: /data/db
        MONGO_INITDB_DATABASE: items
      ports:
        - "27017:27017"      
  solr:
    container_name: solr
    image: solr
    ports:
      - "8983:8983"
    volumes:
      - ./docker/solr/managed-schema:/opt/solr/server/solr/configsets/_default/conf/managed-schema
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - items
  rabbit:
      container_name: rabbit
      image: rabbitmq:3-management
      environment:
        RABBITMQ_DEFAULT_USER: user
        RABBITMQ_DEFAULT_PASS: password
      volumes:
      - ./docker/rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./docker/rabbit/definitions.json:/etc/rabbitmq/definitions.json:ro
      ports:
        - "5671:5671"
        - "5672:5672"
        - "8080:15672"
      healthcheck:
        test: rabbitmq-diagnostics check_port_connectivity
        interval: 1s
        timeout: 20s
        retries: 30
  memcached:
    container_name: cache
    image: memcached
    ports:
      - "11211:11211"
  items:
    build: ./items
    depends_on:
      mongo_db: 
        condition: service_started
    ports:
      - "8090:8090"

  messages:
    build: ./messages
    depends_on:
      mongo_db: 
        condition: service_started
    ports: 
      - "9001:9001"
  search:
    build: ./search
    ports:
      - "8081:8081"
  users:
    build: ./users
    depends_on:
      users_database:
        condition: service_healthy
    ports:
      - "9000:9000"
  consumers:
    build: ./consumers
    depends_on:
      rabbit:
        condition: service_healthy
  cache:
    build: ./cache
    depends_on:
      memcached:
        condition: service_started